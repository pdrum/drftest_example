{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to DRF Test documentation. This documentation is categorized according to subsystems of your code. Name of each subsystem is given in the navigation menu. You can click on each item to visit documentation of that subsystem. Happy coding :)","title":"Welcome"},{"location":"#welcome","text":"Welcome to DRF Test documentation. This documentation is categorized according to subsystems of your code. Name of each subsystem is given in the navigation menu. You can click on each item to visit documentation of that subsystem. Happy coding :)","title":"Welcome"},{"location":"todo/","text":"todo todo app has the following tests. Tests are categorized into classes where each class has several test cases. CreateToDoItemTest This endpoint creates to-do items This class has the following test cases: test_successful_creation URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token e2a37bee2f14cc7159c02830ad1dd6c11bd1ca41 } Request data: { is_done : true, name : First } Response status code : 201 Response data: { id : 1, is_done : true, name : First } test_without_name Description: name should be provided in request body. URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token 46eed6a52e75c5d6dc41f6c9e6fdc513ba9134af } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] } DeleteToDoItemViewTest This endpoint deletes to-do items. This class has the following test cases: test_successful_deletion URL: /api//todo-items/1/ Method: delete Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token b04b13687fe88ea15a0b1447aaf469ef19797edb } Response status code : 204 test_when_id_does_not_exist URL: /api//todo-items/34536/ Method: delete Format: json Path parameters: { pk : 34536 } Headers: { AUTHORIZATION : Token 68d9252f8c9d99777109f2d23257e5e47e4ca9bc } Response status code : 404 Response data: { detail : Not found. } EditToDoItemTest This endpoint edits to-do items. This class has the following test cases: test_successful_edit URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 6c070266b972cc84b720cb7f9129ded465e2e01c } Request data: { is_done : true, name : Bar } Response status code : 200 Response data: { id : 1, is_done : true, name : Bar } test_when_id_does_not_exist Description: id should correspond to an existing to-do item. URL: /api//todo-items/53353/ Method: put Format: json Path parameters: { pk : 53353 } Headers: { AUTHORIZATION : Token f2a190162facf54ba7d9777828d39325eb0cad09 } Request data: { is_done : true, name : Bar } Response status code : 404 Response data: { detail : Not found. } test_when_name_is_missing Description: name should be provided in request body. URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 40bbb0e94ba5ecff66b42a48a76a88fb5fa1df2e } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] }","title":"todo"},{"location":"todo/#todo","text":"todo app has the following tests. Tests are categorized into classes where each class has several test cases.","title":"todo"},{"location":"todo/#createtodoitemtest","text":"This endpoint creates to-do items This class has the following test cases: test_successful_creation URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token e2a37bee2f14cc7159c02830ad1dd6c11bd1ca41 } Request data: { is_done : true, name : First } Response status code : 201 Response data: { id : 1, is_done : true, name : First } test_without_name Description: name should be provided in request body. URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token 46eed6a52e75c5d6dc41f6c9e6fdc513ba9134af } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] }","title":"CreateToDoItemTest"},{"location":"todo/#deletetodoitemviewtest","text":"This endpoint deletes to-do items. This class has the following test cases: test_successful_deletion URL: /api//todo-items/1/ Method: delete Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token b04b13687fe88ea15a0b1447aaf469ef19797edb } Response status code : 204 test_when_id_does_not_exist URL: /api//todo-items/34536/ Method: delete Format: json Path parameters: { pk : 34536 } Headers: { AUTHORIZATION : Token 68d9252f8c9d99777109f2d23257e5e47e4ca9bc } Response status code : 404 Response data: { detail : Not found. }","title":"DeleteToDoItemViewTest"},{"location":"todo/#edittodoitemtest","text":"This endpoint edits to-do items. This class has the following test cases: test_successful_edit URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 6c070266b972cc84b720cb7f9129ded465e2e01c } Request data: { is_done : true, name : Bar } Response status code : 200 Response data: { id : 1, is_done : true, name : Bar } test_when_id_does_not_exist Description: id should correspond to an existing to-do item. URL: /api//todo-items/53353/ Method: put Format: json Path parameters: { pk : 53353 } Headers: { AUTHORIZATION : Token f2a190162facf54ba7d9777828d39325eb0cad09 } Request data: { is_done : true, name : Bar } Response status code : 404 Response data: { detail : Not found. } test_when_name_is_missing Description: name should be provided in request body. URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 40bbb0e94ba5ecff66b42a48a76a88fb5fa1df2e } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] }","title":"EditToDoItemTest"}]}