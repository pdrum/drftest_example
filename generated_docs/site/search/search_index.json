{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to DRF Test documentation. This documentation is categorized according to subsystems of your code. Name of each subsystem is given in the navigation menu. You can click on each item to visit documentation of that subsystem. Happy coding :)","title":"Welcome"},{"location":"#welcome","text":"Welcome to DRF Test documentation. This documentation is categorized according to subsystems of your code. Name of each subsystem is given in the navigation menu. You can click on each item to visit documentation of that subsystem. Happy coding :)","title":"Welcome"},{"location":"todo/","text":"todo todo app has the following tests. Tests are categorized into classes where each class has several test cases. CreateToDoItemTest This endpoint creates to-do items This class has the following test cases: test_successful_creation URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token 77acec346c95d9b52c6f21ff16a0d4fd0c4b0567 } Request data: { is_done : true, name : First } Response status code : 201 Response data: { id : 1, is_done : true, name : First } test_without_name Description: name should be provided in request body. URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token 0d70155b85201c3a93fa17aa3362945d7939b19c } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] } DeleteToDoItemTest This endpoint deletes to-do items. This class has the following test cases: test_successful_deletion URL: /api//todo-items/1/ Method: delete Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 151d92397ead142c4560e96a973b9b5787944aca } Response status code : 204 test_when_id_does_not_exist URL: /api//todo-items/34536/ Method: delete Format: json Path parameters: { pk : 34536 } Headers: { AUTHORIZATION : Token b17bdfb848c60ad00b193f0639eb4618452ff9c4 } Response status code : 404 Response data: { detail : Not found. } EditToDoItemTest This endpoint edits to-do items. This class has the following test cases: test_successful_edit URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 438e496dc18cb2fd473fc640c019397be4f6b5a7 } Request data: { is_done : true, name : Bar } Response status code : 200 Response data: { id : 1, is_done : true, name : Bar } test_when_id_does_not_exist Description: id should correspond to an existing to-do item. URL: /api//todo-items/53353/ Method: put Format: json Path parameters: { pk : 53353 } Headers: { AUTHORIZATION : Token e006764ad2a651414caadada1e5242b185698b60 } Request data: { is_done : true, name : Bar } Response status code : 404 Response data: { detail : Not found. } test_when_name_is_missing Description: name should be provided in request body. URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 494e90b1b1afa7814f799d0bbcb10df9b4ba5f9d } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] }","title":"todo"},{"location":"todo/#todo","text":"todo app has the following tests. Tests are categorized into classes where each class has several test cases.","title":"todo"},{"location":"todo/#createtodoitemtest","text":"This endpoint creates to-do items This class has the following test cases: test_successful_creation URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token 77acec346c95d9b52c6f21ff16a0d4fd0c4b0567 } Request data: { is_done : true, name : First } Response status code : 201 Response data: { id : 1, is_done : true, name : First } test_without_name Description: name should be provided in request body. URL: /api//todo-items/ Method: post Format: json Headers: { AUTHORIZATION : Token 0d70155b85201c3a93fa17aa3362945d7939b19c } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] }","title":"CreateToDoItemTest"},{"location":"todo/#deletetodoitemtest","text":"This endpoint deletes to-do items. This class has the following test cases: test_successful_deletion URL: /api//todo-items/1/ Method: delete Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 151d92397ead142c4560e96a973b9b5787944aca } Response status code : 204 test_when_id_does_not_exist URL: /api//todo-items/34536/ Method: delete Format: json Path parameters: { pk : 34536 } Headers: { AUTHORIZATION : Token b17bdfb848c60ad00b193f0639eb4618452ff9c4 } Response status code : 404 Response data: { detail : Not found. }","title":"DeleteToDoItemTest"},{"location":"todo/#edittodoitemtest","text":"This endpoint edits to-do items. This class has the following test cases: test_successful_edit URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 438e496dc18cb2fd473fc640c019397be4f6b5a7 } Request data: { is_done : true, name : Bar } Response status code : 200 Response data: { id : 1, is_done : true, name : Bar } test_when_id_does_not_exist Description: id should correspond to an existing to-do item. URL: /api//todo-items/53353/ Method: put Format: json Path parameters: { pk : 53353 } Headers: { AUTHORIZATION : Token e006764ad2a651414caadada1e5242b185698b60 } Request data: { is_done : true, name : Bar } Response status code : 404 Response data: { detail : Not found. } test_when_name_is_missing Description: name should be provided in request body. URL: /api//todo-items/1/ Method: put Format: json Path parameters: { pk : 1 } Headers: { AUTHORIZATION : Token 494e90b1b1afa7814f799d0bbcb10df9b4ba5f9d } Request data: { is_done : true } Response status code : 400 Response data: { name : [ This field is required. ] }","title":"EditToDoItemTest"}]}